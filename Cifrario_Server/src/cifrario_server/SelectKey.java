/*
 * Copyright (c) 2010, Oracle.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *  * Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the distribution.
 *  * Neither the name of Oracle nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED 
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

/* Anagram Game Application */

package cifrario_server;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * 
 */
public class SelectKey extends JDialog {
   private Cifrario_serverGUI parent;
   protected final int MES_DECRIPT_COL = 1; 
   protected final int KEY_COL = 0;   
   protected String key="";
    public SelectKey(Cifrario_serverGUI parent,ArrayList<String> chiaviCandidate,ArrayList<String> messaggiDecriptati) {
        super(parent,true);
        this.parent=parent;
        initComponents();
        pack();
        Rectangle parentBounds = parent.getBounds();
        Dimension size = getSize();
        // Center in the parent
        int x = Math.max(0, parentBounds.x + (parentBounds.width - size.width) / 2);
        int y = Math.max(0, parentBounds.y + (parentBounds.height - size.height) / 2);
        setLocation(new Point(x, y));
        updateTab(chiaviCandidate,messaggiDecriptati);
        key="";
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPopupMenu_mesOption = new javax.swing.JPopupMenu();
        jMenuItem_mostraMesDecifrato = new javax.swing.JMenuItem();
        jMenuItem_scegliChiave = new javax.swing.JMenuItem();
        mainPanel = new javax.swing.JPanel();
        jScrollPane_tab = new javax.swing.JScrollPane();
        jTable_messaggi = new javax.swing.JTable();
        closeButton = new javax.swing.JButton();
        jButton_scegli = new javax.swing.JButton();

        jMenuItem_mostraMesDecifrato.setText("Mostra messaggio decifrato");
        jMenuItem_mostraMesDecifrato.setActionCommand("Mostra messaggio cifrato");
        jMenuItem_mostraMesDecifrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_mostraMesDecifratoActionPerformed(evt);
            }
        });
        jPopupMenu_mesOption.add(jMenuItem_mostraMesDecifrato);

        jMenuItem_scegliChiave.setText("Scegli questa chiave");
        jMenuItem_scegliChiave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_scegliChiaveActionPerformed(evt);
            }
        });
        jPopupMenu_mesOption.add(jMenuItem_scegliChiave);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Seleziona chiave");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        mainPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(11, 11, 12, 12));

        jScrollPane_tab.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane_tab.setBorder(javax.swing.BorderFactory.createTitledBorder("Messaggi decriptati con chiavi candidate"));

        jTable_messaggi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Chiave", "Messaggio decifrato"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_messaggi.setToolTipText("");
        jTable_messaggi.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable_messaggi.setGridColor(new java.awt.Color(255, 153, 102));
        jTable_messaggi.setSelectionBackground(new java.awt.Color(102, 204, 255));
        jTable_messaggi.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable_messaggi.setShowGrid(true);
        jTable_messaggi.getTableHeader().setReorderingAllowed(false);
        jTable_messaggi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable_messaggiMouseReleased(evt);
            }
        });
        jScrollPane_tab.setViewportView(jTable_messaggi);

        closeButton.setMnemonic('C');
        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        jButton_scegli.setMnemonic('C');
        jButton_scegli.setText("Scegli");
        jButton_scegli.setEnabled(false);
        jButton_scegli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_scegliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton_scegli)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton))
            .addComponent(jScrollPane_tab, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane_tab, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton)
                    .addComponent(jButton_scegli)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(mainPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void jTable_messaggiMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_messaggiMouseReleased
        //jTable_messaggi.rowAtPoint() Restituisce l'indice della
        //riga della tabella, se evt.getPoint() restituisce un un
        //punto che si trova su una riga, altrimenti ritorna -1.
        int r = jTable_messaggi.rowAtPoint(evt.getPoint());
        if (r >= 0 && r < jTable_messaggi.getRowCount()) {
            System.out.println("Riga "+r+"selezionata.");
            //jTable_messaggi.setRowSelectionInterval(r, r);
            int rowindex = jTable_messaggi.getSelectedRow();
            if (rowindex < 0)
            return;
            if(evt.getButton() == java.awt.event.MouseEvent.BUTTON3){//Click dx
                if(jTable_messaggi.getSelectedRowCount()==1)jTable_messaggi.setRowSelectionInterval(r, r);
                System.out.println("Show option menu");
                jPopupMenu_mesOption.show(evt.getComponent(), evt.getX(), evt.getY());
            }
            else{
                System.out.println("Click sx");
            }
            jButton_scegli.setEnabled(true);
        }
        else{
          jButton_scegli.setEnabled(false);
        }
    }//GEN-LAST:event_jTable_messaggiMouseReleased

    private void jMenuItem_mostraMesDecifratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_mostraMesDecifratoActionPerformed
        int r = jTable_messaggi.getSelectedRow();
        String mesDecriptato = (String) jTable_messaggi.getValueAt(r,MES_DECRIPT_COL);
        if(!mesDecriptato.isEmpty())
        new ShowMes(parent,(String) jTable_messaggi.getValueAt(r,MES_DECRIPT_COL)).setVisible(true);
        else
        JOptionPane.showMessageDialog(this,"Messaggio non ancora decriptato.", "Impossibile visualizzare il messaggio", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jMenuItem_mostraMesDecifratoActionPerformed

    private void jMenuItem_scegliChiaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_scegliChiaveActionPerformed
      int r = jTable_messaggi.getSelectedRow();
      key = (String) jTable_messaggi.getValueAt(r,KEY_COL);
      dispose();
    }//GEN-LAST:event_jMenuItem_scegliChiaveActionPerformed

    private void jButton_scegliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_scegliActionPerformed
      int r = jTable_messaggi.getSelectedRow();
      key = (String) jTable_messaggi.getValueAt(r,KEY_COL);
      dispose();
    }//GEN-LAST:event_jButton_scegliActionPerformed

    private void updateTab(ArrayList<String> chiavi,ArrayList<String> messaggiDecriptati){
      for(int i=0;i<messaggiDecriptati.size();i++){
        DefaultTableModel model = (DefaultTableModel) jTable_messaggi.getModel();
        model.addRow(new Object[]{chiavi.get(i),messaggiDecriptati.get(i)});    
      }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JButton jButton_scegli;
    private javax.swing.JMenuItem jMenuItem_mostraMesDecifrato;
    private javax.swing.JMenuItem jMenuItem_scegliChiave;
    private javax.swing.JPopupMenu jPopupMenu_mesOption;
    private javax.swing.JScrollPane jScrollPane_tab;
    protected javax.swing.JTable jTable_messaggi;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables

}
